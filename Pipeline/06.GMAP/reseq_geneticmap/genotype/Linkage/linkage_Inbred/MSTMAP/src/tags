!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
A	def.h	/^	double A;$/;"	m	struct:allel_state
AB	def.h	/^	double AB;$/;"	m	struct:allel_state
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/share\/nas9\/macx\/research\/slaf4\/MSTmap\/v1.1\/missing --run aclocal-1.9$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AMDEP_FALSE	Makefile	/^AMDEP_FALSE = #$/;"	m
AMDEP_TRUE	Makefile	/^AMDEP_TRUE = $/;"	m
AMTAR	Makefile	/^AMTAR = ${SHELL} \/share\/nas9\/macx\/research\/slaf4\/MSTmap\/v1.1\/missing --run tar$/;"	m
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/share\/nas9\/macx\/research\/slaf4\/MSTmap\/v1.1\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/share\/nas9\/macx\/research\/slaf4\/MSTmap\/v1.1\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/share\/nas9\/macx\/research\/slaf4\/MSTmap\/v1.1\/missing --run automake-1.9$/;"	m
AUTOMAKE_OPTION	Makefile	/^AUTOMAKE_OPTION = foreign$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
B	def.h	/^	double B;$/;"	m	struct:allel_state
BC_generation_index_	genetic_map_BCpxFy.h	/^        int BC_generation_index_;$/;"	m	class:genetic_map_BCpxFy
BC_generation_index_	linkage_group_BCpxFy.h	/^        int BC_generation_index_;$/;"	m	class:BCpxFy_dist_cal
BC_generation_index_	linkage_group_BCpxFy.h	/^        int BC_generation_index_;$/;"	m	class:linkage_group_BCpxFy
BCpxFy_dist_cal	linkage_group_BCpxFy.h	/^        BCpxFy_dist_cal(int _BC_generation_index, int _F_generation_index, const vector<allel_state>& _marker1, const vector<allel_state>& _marker2)$/;"	f	class:BCpxFy_dist_cal
BCpxFy_dist_cal	linkage_group_BCpxFy.h	/^class BCpxFy_dist_cal{$/;"	c
Block	MSTOpt.h	/^        struct Block{$/;"	s	class:MSTOpt
Block_Chain	MSTOpt.h	/^        struct Block_Chain{$/;"	s	class:MSTOpt
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CC_	linkage_group_BCpxFy.h	/^        double CC_;$/;"	m	class:BCpxFy_dist_cal
CC_	linkage_group_RIL.h	/^        double CC_;$/;"	m	class:RIL_dist_cal
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CM	linkage_group.h	/^        virtual double CM(double rp) const {$/;"	f	class:DF
CM	linkage_group.h	/^        virtual double CM(double rp) const {$/;"	f	class:DF_Haldane
CM	linkage_group.h	/^        virtual double CM(double rp) const {$/;"	f	class:DF_Kosambi
COMBINE_BINS_TH	constants.h	/^const double COMBINE_BINS_TH = 0.1;$/;"	v
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONSTANTS_HEADER	constants.h	11;"	d
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CXX	Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXLD	Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
DD_	linkage_group_BCpxFy.h	/^        double DD_;$/;"	m	class:BCpxFy_dist_cal
DD_	linkage_group_RIL.h	/^        double DD_;$/;"	m	class:RIL_dist_cal
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DF	linkage_group.h	/^class DF{$/;"	c
DF_Haldane	linkage_group.h	/^class DF_Haldane:public DF{$/;"	c
DF_Kosambi	linkage_group.h	/^class DF_Kosambi:public DF{$/;"	c
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(MSTmap_SOURCES)$/;"	m
Dist	linkage_group_BCpxFy.h	/^        double Dist() const {$/;"	f	class:BCpxFy_dist_cal
Dist	linkage_group_RIL.h	/^        double Dist() const {$/;"	f	class:RIL_dist_cal
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EE_	linkage_group_BCpxFy.h	/^        double EE_;$/;"	m	class:BCpxFy_dist_cal
EE_	linkage_group_RIL.h	/^        double EE_;$/;"	m	class:RIL_dist_cal
EGREP	Makefile	/^EGREP = grep -E$/;"	m
ESTIMATION_BEFORE_CLUSTERING	constants.h	/^const double ESTIMATION_BEFORE_CLUSTERING = 0.01;$/;"	v
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
FG_	linkage_group_BCpxFy.h	/^        double FG_;$/;"	m	class:BCpxFy_dist_cal
FG_	linkage_group_RIL.h	/^        double FG_;$/;"	m	class:RIL_dist_cal
F_generation_index_	genetic_map_BCpxFy.h	/^        int F_generation_index_;$/;"	m	class:genetic_map_BCpxFy
F_generation_index_	linkage_group_BCpxFy.h	/^        int F_generation_index_; $/;"	m	class:linkage_group_BCpxFy
F_generation_index_	linkage_group_BCpxFy.h	/^        int F_generation_index_;$/;"	m	class:BCpxFy_dist_cal
HALDANE	constants.h	/^const string HALDANE = "haldane";$/;"	v
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s$/;"	m
KOSAMBI	constants.h	/^const string KOSAMBI = "kosambi";$/;"	v
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/share\/nas9\/macx\/research\/slaf4\/MSTmap\/v1.1\/missing --run makeinfo$/;"	m
MST	MSTOpt.h	/^        vector<int> MST;$/;"	m	class:MSTOpt
MST	linkage_group.h	/^        vector<int> MST; \/\/ the current MST$/;"	m	class:linkage_group
MSTOpt	MSTOpt.cpp	/^MSTOpt::MSTOpt(const vector<vector<double> > & _pair_wise_distances, int _num_bins, int nested_level) $/;"	f	class:MSTOpt
MSTOpt	MSTOpt.h	/^class MSTOpt{$/;"	c
MSTOpt_HEADER	MSTOpt.h	10;"	d
MST_lower_bound	MSTOpt.h	/^        double MST_lower_bound;$/;"	m	class:MSTOpt
MST_lower_bound	linkage_group.h	/^        double MST_lower_bound;$/;"	m	class:linkage_group
MSTmap_LDADD	Makefile	/^MSTmap_LDADD = $(LDADD)$/;"	m
MSTmap_OBJECTS	Makefile	/^MSTmap_OBJECTS = $(am_MSTmap_OBJECTS)$/;"	m
MSTmap_SOURCES	Makefile	/^MSTmap_SOURCES = genetic_map.cpp linkage_group.cpp genetic_map_DH.cpp  genetic_map_RIL.cpp genetic_map_BCpxFy.cpp  linkage_group_DH.cpp  linkage_group_RIL.cpp linkage_group_BCpxFy.cpp  main.cpp  MSTOpt.cpp $/;"	m
Missing_Threshold	constants.h	/^const double Missing_Threshold = 0.30; \/\/ a marker will be removed if more than 40% of its genotype calls are missing$/;"	v
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJF_CM	constants.h	/^enum ObjFunc{OBJF_ML, OBJF_COUNT, OBJF_CM};$/;"	e	enum:ObjFunc
OBJF_COUNT	constants.h	/^enum ObjFunc{OBJF_ML, OBJF_COUNT, OBJF_CM};$/;"	e	enum:ObjFunc
OBJF_ML	constants.h	/^enum ObjFunc{OBJF_ML, OBJF_COUNT, OBJF_CM};$/;"	e	enum:ObjFunc
ObjFunc	constants.h	/^enum ObjFunc{OBJF_ML, OBJF_COUNT, OBJF_CM};$/;"	g
Opt_Order	MSTOpt.cpp	/^void MSTOpt::Opt_Order(vector<int>& out_order,$/;"	f	class:MSTOpt
PACKAGE	Makefile	/^PACKAGE = MSTmap$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = macx@biomarker.com.cn$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = MSTmap$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = MSTmap 1.0.0$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = mstmap$/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 1.0.0$/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PROB_HOEFFDING_CUT_OFF	constants.h	/^const double PROB_HOEFFDING_CUT_OFF = 0.000001;$/;"	v
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
RIL_dist_cal	linkage_group_RIL.h	/^        RIL_dist_cal(int _generation_index, const vector<allel_state>& _marker1, const vector<allel_state>& _marker2)$/;"	f	class:RIL_dist_cal
RIL_dist_cal	linkage_group_RIL.h	/^class RIL_dist_cal{$/;"	c
RP	linkage_group.h	/^        virtual double RP(double cm) const {$/;"	f	class:DF
RP	linkage_group.h	/^        virtual double RP(double cm) const {$/;"	f	class:DF_Haldane
RP	linkage_group.h	/^        virtual double RP(double cm) const {$/;"	f	class:DF_Kosambi
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SOURCES	Makefile	/^SOURCES = $(MSTmap_SOURCES)$/;"	m
STRIP	Makefile	/^STRIP = $/;"	m
VERSION	Makefile	/^VERSION = 1.0.0$/;"	m
ZERO_MINUS	constants.h	/^const double ZERO_MINUS = -0.0001;$/;"	v
ZERO_PLUS	constants.h	/^const double ZERO_PLUS = 0.0001;$/;"	v
__DEF_H__	def.h	21;"	d
__GENETIC_MAP_BCPXFY_H__	genetic_map_BCpxFy.h	10;"	d
__GENETIC_MAP_DH_H__	genetic_map_DH.h	10;"	d
__GENETIC_MAP_H__	genetic_map.h	10;"	d
__GENETIC_MAP_RIL_H__	genetic_map_RIL.h	10;"	d
__LINKAGE_GROUP_BCPXFY_H__	linkage_group_BCpxFy.h	11;"	d
__LINKAGE_GROUP_DH_H__	linkage_group_DH.h	11;"	d
__LINKAGE_GROUP_H__	linkage_group.h	11;"	d
__LINKAGE_GROUP_RIL_H__	linkage_group_RIL.h	11;"	d
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_STRIP	Makefile	/^ac_ct_STRIP = $/;"	m
allel_state	def.h	/^struct allel_state {$/;"	s
am_MSTmap_OBJECTS	Makefile	/^am_MSTmap_OBJECTS = genetic_map.$(OBJEXT) linkage_group.$(OBJEXT) \\$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.in$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__fastdepCC_FALSE	Makefile	/^am__fastdepCC_FALSE = #$/;"	m
am__fastdepCC_TRUE	Makefile	/^am__fastdepCC_TRUE = $/;"	m
am__fastdepCXX_FALSE	Makefile	/^am__fastdepCXX_FALSE = #$/;"	m
am__fastdepCXX_TRUE	Makefile	/^am__fastdepCXX_TRUE = $/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
approx_bounds	genetic_map.h	/^        vector<double>  approx_bounds;$/;"	m	class:genetic_map
bad_genotypes	linkage_group.cpp	/^void linkage_group::bad_genotypes(vector<pair<int,int> >& bad_genotypes) const{$/;"	f	class:linkage_group
binPROGRAMS_INSTALL	Makefile	/^binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)$/;"	m
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = MSTmap$(EXEEXT)$/;"	m
bin_sizes	linkage_group.h	/^        vector<int> bin_sizes;$/;"	m	class:linkage_group
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
block_cost	MSTOpt.cpp	/^double MSTOpt::block_cost(const Block_Chain& bc){$/;"	f	class:MSTOpt
block_fix_orientation	MSTOpt.cpp	/^void MSTOpt::block_fix_orientation(Block_Chain& bc) {$/;"	f	class:MSTOpt
block_optimize	MSTOpt.cpp	/^bool MSTOpt::block_optimize() {$/;"	f	class:MSTOpt
block_optimize_iteration	MSTOpt.cpp	/^bool MSTOpt::block_optimize_iteration(Block_Chain& bc){$/;"	f	class:MSTOpt
break_into_blocks	MSTOpt.cpp	/^MSTOpt::Block_Chain MSTOpt::break_into_blocks(){$/;"	f	class:MSTOpt
bs	MSTOpt.h	/^            vector<Block> bs;$/;"	m	struct:MSTOpt::Block_Chain
build_alias	Makefile	/^build_alias = $/;"	m
calculate_MST	MSTOpt.cpp	/^double MSTOpt::calculate_MST()$/;"	f	class:MSTOpt
calculate_crt_upper_bound	MSTOpt.cpp	/^double MSTOpt::calculate_crt_upper_bound(){$/;"	f	class:MSTOpt
calculate_hoeffding_bound	genetic_map.cpp	/^double genetic_map::calculate_hoeffding_bound(double prob_cut_off) {$/;"	f	class:genetic_map
calculate_pair_wise_distance	genetic_map_BCpxFy.cpp	/^void genetic_map_BCpxFy::calculate_pair_wise_distance(){$/;"	f	class:genetic_map_BCpxFy
calculate_pair_wise_distance	genetic_map_DH.cpp	/^void genetic_map_DH::calculate_pair_wise_distance()$/;"	f	class:genetic_map_DH
calculate_pair_wise_distance	genetic_map_RIL.cpp	/^void genetic_map_RIL::calculate_pair_wise_distance(){$/;"	f	class:genetic_map_RIL
calculate_pair_wise_distance	linkage_group_BCpxFy.cpp	/^void linkage_group_BCpxFy::calculate_pair_wise_distance(){$/;"	f	class:linkage_group_BCpxFy
calculate_pair_wise_distance	linkage_group_DH.cpp	/^void linkage_group_DH::calculate_pair_wise_distance()$/;"	f	class:linkage_group_DH
calculate_pair_wise_distance	linkage_group_RIL.cpp	/^void linkage_group_RIL::calculate_pair_wise_distance(){$/;"	f	class:linkage_group_RIL
calculate_pair_wise_distance_initialize	linkage_group_DH.cpp	/^void linkage_group_DH::calculate_pair_wise_distance_initialize() {$/;"	f	class:linkage_group_DH
cluster	genetic_map.cpp	/^int genetic_map::cluster() {$/;"	f	class:genetic_map
clustering_prob_cut_off	genetic_map.h	/^        double clustering_prob_cut_off;$/;"	m	class:genetic_map
cmp	linkage_group.cpp	/^bool cmp(pair<double, pair<int,int> > element1, pair<double, pair<int,int> > element2)$/;"	f
condense_bin	genetic_map.cpp	/^void genetic_map::condense_bin(){$/;"	f	class:genetic_map
condense_markers_into_bins	genetic_map.cpp	/^void genetic_map::condense_markers_into_bins()$/;"	f	class:genetic_map
connected_components	genetic_map.h	/^        vector<vector<int> > connected_components;$/;"	m	class:genetic_map
construct_linkage_group	genetic_map_BCpxFy.cpp	/^linkage_group_BCpxFy* genetic_map_BCpxFy::construct_linkage_group(int group_id){$/;"	f	class:genetic_map_BCpxFy
construct_linkage_group	genetic_map_DH.cpp	/^linkage_group_DH* genetic_map_DH::construct_linkage_group(int group_id)$/;"	f	class:genetic_map_DH
construct_linkage_group	genetic_map_RIL.cpp	/^linkage_group_RIL* genetic_map_RIL::construct_linkage_group(int group_id){$/;"	f	class:genetic_map_RIL
construct_linkage_group_whole_map	genetic_map_BCpxFy.cpp	/^linkage_group_BCpxFy* genetic_map_BCpxFy::construct_linkage_group_whole_map(){$/;"	f	class:genetic_map_BCpxFy
construct_linkage_group_whole_map	genetic_map_DH.cpp	/^linkage_group_DH* genetic_map_DH::construct_linkage_group_whole_map()$/;"	f	class:genetic_map_DH
construct_linkage_group_whole_map	genetic_map_RIL.cpp	/^linkage_group_RIL* genetic_map_RIL::construct_linkage_group_whole_map(){$/;"	f	class:genetic_map_RIL
contract_blocks	MSTOpt.cpp	/^void MSTOpt::contract_blocks(const Block_Chain& bc, vector<vector<double> >& block_distances) {$/;"	f	class:MSTOpt
copy_order	MSTOpt.cpp	/^void MSTOpt::copy_order(vector<int> & order_from, $/;"	f	class:MSTOpt
copy_over_order	MSTOpt.cpp	/^void MSTOpt::copy_over_order(const Block_Chain& bc){$/;"	f	class:MSTOpt
cost_after_initialization	MSTOpt.h	/^        double cost_after_initialization;$/;"	m	class:MSTOpt
cost_after_initialization	linkage_group.h	/^        double cost_after_initialization;$/;"	m	class:linkage_group
count_class	linkage_group_BCpxFy.cpp	/^void BCpxFy_dist_cal::count_class(){$/;"	f	class:BCpxFy_dist_cal
count_class	linkage_group_RIL.cpp	/^void RIL_dist_cal::count_class(){$/;"	f	class:RIL_dist_cal
current_order	MSTOpt.h	/^        vector<int> current_order; \/\/concatenation of the markers in the order of the path$/;"	m	class:MSTOpt
current_order	linkage_group.h	/^        vector<int> current_order; \/\/concatenation of the markers in the order of the path$/;"	m	class:linkage_group
current_upper_bound	MSTOpt.h	/^        double current_upper_bound;$/;"	m	class:MSTOpt
current_upper_bound	linkage_group.h	/^        double current_upper_bound;$/;"	m	class:linkage_group
data_status	linkage_group_DH.h	/^        vector<vector<int> > data_status;$/;"	m	class:linkage_group_DH
datadir	Makefile	/^datadir = ${prefix}\/share$/;"	m
delta_lower_bound_	linkage_group_BCpxFy.h	/^        double delta_lower_bound_;$/;"	m	class:BCpxFy_dist_cal
delta_lower_bound_	linkage_group_RIL.h	/^        double delta_lower_bound_;$/;"	m	class:RIL_dist_cal
delta_upper_bound_	linkage_group_BCpxFy.h	/^        double delta_upper_bound_;$/;"	m	class:BCpxFy_dist_cal
delta_upper_bound_	linkage_group_RIL.h	/^        double delta_upper_bound_;$/;"	m	class:RIL_dist_cal
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
detect_bad_data	genetic_map.h	/^        bool detect_bad_data;$/;"	m	class:genetic_map
detect_bad_data	linkage_group.h	/^        bool detect_bad_data;$/;"	m	class:linkage_group
detect_bad_markers	linkage_group_DH.cpp	/^int linkage_group_DH::detect_bad_markers(){$/;"	f	class:linkage_group_DH
df	linkage_group.h	/^        DF* df;$/;"	m	class:linkage_group
df_	genetic_map.h	/^        DF* df_;$/;"	m	class:genetic_map
dis_locate	MSTOpt.cpp	/^bool MSTOpt::dis_locate()$/;"	f	class:MSTOpt
dist_condensed	genetic_map.h	/^        vector<vector<double> > dist_condensed; \/\/this is the distance in cM$/;"	m	class:genetic_map
distance_between_adjacent_pairs	genetic_map.h	/^        vector<vector<double> > distance_between_adjacent_pairs; \/\/ this is the distance is cM$/;"	m	class:genetic_map
distance_function	genetic_map.h	/^        string distance_function;$/;"	m	class:genetic_map
dump	genetic_map.cpp	/^void genetic_map::dump()$/;"	f	class:genetic_map
dump	linkage_group_BCpxFy.cpp	/^void linkage_group_BCpxFy::dump() const {$/;"	f	class:linkage_group_BCpxFy
dump	linkage_group_DH.cpp	/^void linkage_group_DH::dump() const {$/;"	f	class:linkage_group_DH
dump	linkage_group_RIL.cpp	/^void linkage_group_RIL::dump() const {$/;"	f	class:linkage_group_RIL
dump_common	linkage_group.cpp	/^void linkage_group::dump_common() const {$/;"	f	class:linkage_group
dump_connected_components_edges	genetic_map.cpp	/^void genetic_map::dump_connected_components_edges() {$/;"	f	class:genetic_map
dump_distance_matrix	genetic_map.cpp	/^void genetic_map::dump_distance_matrix() {$/;"	f	class:genetic_map
dump_distance_matrix	linkage_group.cpp	/^void linkage_group::dump_distance_matrix() {$/;"	f	class:linkage_group
estimate_missing_data	linkage_group_BCpxFy.cpp	/^void linkage_group_BCpxFy::estimate_missing_data() {$/;"	f	class:linkage_group_BCpxFy
estimate_missing_data	linkage_group_DH.cpp	/^void linkage_group_DH::estimate_missing_data(){$/;"	f	class:linkage_group_DH
estimate_missing_data	linkage_group_RIL.cpp	/^void linkage_group_RIL::estimate_missing_data() {$/;"	f	class:linkage_group_RIL
estimation_before_clustering	genetic_map.h	/^        bool estimation_before_clustering;$/;"	m	class:genetic_map
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
expected_CDEFG	linkage_group_BCpxFy.cpp	/^void BCpxFy_dist_cal::expected_CDEFG(double delta,$/;"	f	class:BCpxFy_dist_cal
expected_CDEFG	linkage_group_RIL.cpp	/^void RIL_dist_cal::expected_CDEFG(double delta,$/;"	f	class:RIL_dist_cal
find_opt_delta	linkage_group_BCpxFy.cpp	/^double BCpxFy_dist_cal::find_opt_delta() const {$/;"	f	class:BCpxFy_dist_cal
find_opt_delta	linkage_group_RIL.cpp	/^double RIL_dist_cal::find_opt_delta() const {$/;"	f	class:RIL_dist_cal
find_opt_order	MSTOpt.cpp	/^void MSTOpt::find_opt_order()$/;"	f	class:MSTOpt
first	MSTOpt.h	/^            int first; \/\/ first element in the block$/;"	m	struct:MSTOpt::Block
gen_raw_prob_data	genetic_map_BCpxFy.cpp	/^void genetic_map_BCpxFy::gen_raw_prob_data(){$/;"	f	class:genetic_map_BCpxFy
gen_raw_prob_data	genetic_map_RIL.cpp	/^void genetic_map_RIL::gen_raw_prob_data(){$/;"	f	class:genetic_map_RIL
generate_distance_in_ML	linkage_group.cpp	/^void linkage_group::generate_distance_in_ML(vector<vector<double> >& distance_in_ML){$/;"	f	class:linkage_group
generate_distance_in_cM	linkage_group.cpp	/^void linkage_group::generate_distance_in_cM(vector<vector<double> >& distance_in_cM){$/;"	f	class:linkage_group
generate_map	genetic_map_BCpxFy.cpp	/^void genetic_map_BCpxFy::generate_map()$/;"	f	class:genetic_map_BCpxFy
generate_map	genetic_map_DH.cpp	/^void genetic_map_DH::generate_map()$/;"	f	class:genetic_map_DH
generate_map	genetic_map_RIL.cpp	/^void genetic_map_RIL::generate_map()$/;"	f	class:genetic_map_RIL
generation_index_	genetic_map_RIL.h	/^        int generation_index_;$/;"	m	class:genetic_map_RIL
generation_index_	linkage_group_RIL.h	/^        int generation_index_;$/;"	m	class:RIL_dist_cal
generation_index_	linkage_group_RIL.h	/^        int generation_index_;$/;"	m	class:linkage_group_RIL
genetic_map	genetic_map.cpp	/^genetic_map::genetic_map() {$/;"	f	class:genetic_map
genetic_map	genetic_map.h	/^class genetic_map{$/;"	c
genetic_map_BCpxFy	genetic_map_BCpxFy.h	/^        genetic_map_BCpxFy():genetic_map(){};$/;"	f	class:genetic_map_BCpxFy
genetic_map_BCpxFy	genetic_map_BCpxFy.h	/^class genetic_map_BCpxFy: public genetic_map {$/;"	c
genetic_map_DH	genetic_map_DH.h	/^        genetic_map_DH():genetic_map(){};$/;"	f	class:genetic_map_DH
genetic_map_DH	genetic_map_DH.h	/^class genetic_map_DH: public genetic_map {$/;"	c
genetic_map_RIL	genetic_map_RIL.h	/^        genetic_map_RIL():genetic_map(){};$/;"	f	class:genetic_map_RIL
genetic_map_RIL	genetic_map_RIL.h	/^class genetic_map_RIL: public genetic_map {$/;"	c
get_pair_wise_distance	linkage_group.cpp	/^const vector<vector<double> >& linkage_group::get_pair_wise_distance() const$/;"	f	class:linkage_group
get_the_longest_path	MSTOpt.cpp	/^vector<int> MSTOpt::get_the_longest_path()$/;"	f	class:MSTOpt
header	MSTOpt.h	/^            int header;$/;"	m	struct:MSTOpt::Block_Chain
host_alias	Makefile	/^host_alias = $/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
individual_names	genetic_map.h	/^        vector<string> individual_names;$/;"	m	class:genetic_map
infodir	Makefile	/^infodir = ${prefix}\/info$/;"	m
install_sh	Makefile	/^install_sh = \/share\/nas9\/macx\/research\/slaf4\/MSTmap\/v1.1\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
iteration_number	linkage_group_DH.h	/^        int iteration_number;$/;"	m	class:linkage_group_DH
kBadDetMaxNum	constants.h	/^const int kBadDetMaxNum = 8;$/;"	v
kMSTVerbose	constants.h	/^const bool kMSTVerbose = false;$/;"	v
kMaskDecrement	constants.h	/^const double kMaskDecrement = 0.02;$/;"	v
kMaskThreshold	constants.h	/^const double kMaskThreshold = 0.75;$/;"	v
kMaxErrorDectionRounds	constants.h	/^const int kMaxErrorDectionRounds = 20;$/;"	v
kMaxMissingEstRounds	constants.h	/^const int kMaxMissingEstRounds = 10;$/;"	v
kMinMaskThreshold	constants.h	/^const double kMinMaskThreshold = 0.75;$/;"	v
last	MSTOpt.h	/^            int last; \/\/ last element in the block$/;"	m	struct:MSTOpt::Block
lg_bins_condensed	genetic_map.h	/^        vector<vector<vector<int> > > lg_bins_condensed;$/;"	m	class:genetic_map
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
linkage_group	linkage_group.h	/^class linkage_group {$/;"	c
linkage_group_BCpxFy	linkage_group_BCpxFy.cpp	/^linkage_group_BCpxFy::linkage_group_BCpxFy(int _number_of_bins, $/;"	f	class:linkage_group_BCpxFy
linkage_group_BCpxFy	linkage_group_BCpxFy.h	/^class linkage_group_BCpxFy: public linkage_group {$/;"	c
linkage_group_DH	linkage_group_DH.cpp	/^linkage_group_DH::linkage_group_DH(int _number_of_bins, $/;"	f	class:linkage_group_DH
linkage_group_DH	linkage_group_DH.h	/^class linkage_group_DH: public linkage_group {$/;"	c
linkage_group_RIL	linkage_group_RIL.cpp	/^linkage_group_RIL::linkage_group_RIL(int _number_of_bins, $/;"	f	class:linkage_group_RIL
linkage_group_RIL	linkage_group_RIL.h	/^class linkage_group_RIL: public linkage_group {$/;"	c
linkage_group_bins	genetic_map.h	/^        vector<vector<vector<int> > > linkage_group_bins;$/;"	m	class:genetic_map
local_improvement	MSTOpt.cpp	/^void MSTOpt::local_improvement()$/;"	f	class:MSTOpt
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
lower_bound	linkage_group_BCpxFy.cpp	/^void BCpxFy_dist_cal::lower_bound(){$/;"	f	class:BCpxFy_dist_cal
lower_bound	linkage_group_RIL.cpp	/^void RIL_dist_cal::lower_bound(){$/;"	f	class:RIL_dist_cal
lowerbounds	genetic_map.h	/^        vector<double>  lowerbounds;$/;"	m	class:genetic_map
main	main.cpp	/^int main (int argc, char * const argv[]) {$/;"	f
mandir	Makefile	/^mandir = ${prefix}\/man$/;"	m
marker1_	linkage_group_BCpxFy.h	/^        const vector<allel_state>& marker1_;$/;"	m	class:BCpxFy_dist_cal
marker1_	linkage_group_RIL.h	/^        const vector<allel_state>& marker1_;$/;"	m	class:RIL_dist_cal
marker2_	linkage_group_BCpxFy.h	/^        const vector<allel_state>& marker2_;$/;"	m	class:BCpxFy_dist_cal
marker2_	linkage_group_RIL.h	/^        const vector<allel_state>& marker2_;$/;"	m	class:RIL_dist_cal
marker_names	genetic_map.h	/^        vector<string> marker_names;$/;"	m	class:genetic_map
markers	MSTOpt.h	/^            vector<int> markers;$/;"	m	struct:MSTOpt::Block
missing	def.h	/^	bool missing;$/;"	m	struct:allel_state
missing_data	linkage_group.h	/^        vector<pair<int,int> > missing_data;$/;"	m	class:linkage_group
missing_threshold	genetic_map.h	/^        double missing_threshold;$/;"	m	class:genetic_map
mkdir_p	Makefile	/^mkdir_p = mkdir -p --$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
n_b	MSTOpt.h	/^            int n_b; $/;"	m	struct:MSTOpt::Block
nested_level_	MSTOpt.h	/^        int nested_level_;$/;"	m	class:MSTOpt
new_serialization	MSTOpt.cpp	/^double MSTOpt::new_serialization()$/;"	f	class:MSTOpt
no_map_dist	genetic_map.h	/^        double no_map_dist; $/;"	m	class:genetic_map
no_map_size	genetic_map.h	/^        int no_map_size;$/;"	m	class:genetic_map
num_of_eff_individuals_	linkage_group_BCpxFy.h	/^        int num_of_eff_individuals_;$/;"	m	class:BCpxFy_dist_cal
num_of_eff_individuals_	linkage_group_RIL.h	/^        int num_of_eff_individuals_;$/;"	m	class:RIL_dist_cal
num_of_individuals_	linkage_group_BCpxFy.h	/^        int num_of_individuals_;$/;"	m	class:BCpxFy_dist_cal
num_of_individuals_	linkage_group_RIL.h	/^        int num_of_individuals_;$/;"	m	class:RIL_dist_cal
number_of_bins	MSTOpt.h	/^        int number_of_bins;$/;"	m	class:MSTOpt
number_of_bins	linkage_group.h	/^        int number_of_bins;$/;"	m	class:linkage_group
number_of_connected_components	genetic_map.h	/^        int number_of_connected_components;$/;"	m	class:genetic_map
number_of_individual	genetic_map.h	/^        int number_of_individual;$/;"	m	class:genetic_map
number_of_individuals	linkage_group.h	/^        int number_of_individuals;$/;"	m	class:linkage_group
number_of_loci	genetic_map.h	/^        int number_of_loci;$/;"	m	class:genetic_map
objective_function	genetic_map.h	/^        ObjFunc objective_function;$/;"	m	class:genetic_map
objective_function	linkage_group.h	/^        ObjFunc objective_function;$/;"	m	class:linkage_group
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
order_markers	linkage_group_BCpxFy.cpp	/^void linkage_group_BCpxFy::order_markers() {$/;"	f	class:linkage_group_BCpxFy
order_markers	linkage_group_DH.cpp	/^void linkage_group_DH::order_markers() {$/;"	f	class:linkage_group_DH
order_markers	linkage_group_RIL.cpp	/^void linkage_group_RIL::order_markers() {$/;"	f	class:linkage_group_RIL
orders	genetic_map.h	/^        vector<vector<int> > orders;$/;"	m	class:genetic_map
orientation	MSTOpt.h	/^            bool orientation; \/\/ is the orientation of the block$/;"	m	struct:MSTOpt::Block
p_	linkage_group_BCpxFy.h	/^        char p_;                 $/;"	m	class:linkage_group_BCpxFy
p_b	MSTOpt.h	/^            int p_b; $/;"	m	struct:MSTOpt::Block
pair_wise_distances	MSTOpt.h	/^        const vector<vector<double> >& pair_wise_distances;$/;"	m	class:MSTOpt
pair_wise_distances	genetic_map.h	/^        vector<vector<double> > pair_wise_distances;$/;"	m	class:genetic_map
pair_wise_distances	linkage_group.h	/^        vector<vector<double> > pair_wise_distances;$/;"	m	class:linkage_group
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/MSTmap$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/MSTmap$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/MSTmap$/;"	m
population_name	genetic_map.h	/^        string population_name;$/;"	m	class:genetic_map
population_type	genetic_map.h	/^        string population_type;$/;"	m	class:genetic_map
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
print_bc	MSTOpt.cpp	/^void MSTOpt::print_bc(const Block_Chain& bc){$/;"	f	class:MSTOpt
print_df_name	linkage_group.h	/^        virtual void print_df_name()  const {$/;"	f	class:DF
print_df_name	linkage_group.h	/^        virtual void print_df_name() const {$/;"	f	class:DF_Haldane
print_df_name	linkage_group.h	/^        virtual void print_df_name() const {$/;"	f	class:DF_Kosambi
print_double_cross_overs	genetic_map_DH.cpp	/^void genetic_map_DH::print_double_cross_overs(){$/;"	f	class:genetic_map_DH
print_suspicious_data	genetic_map_DH.cpp	/^void genetic_map_DH::print_suspicious_data(){$/;"	f	class:genetic_map_DH
print_vector	main.cpp	/^void print_vector(vector<int> tmp)$/;"	f
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
raw_data	linkage_group_BCpxFy.h	/^        vector<vector<allel_state> > raw_data;$/;"	m	class:linkage_group_BCpxFy
raw_data	linkage_group_DH.h	/^        vector<vector<float> > raw_data;$/;"	m	class:linkage_group_DH
raw_data	linkage_group_RIL.h	/^        vector<vector<allel_state> > raw_data;$/;"	m	class:linkage_group_RIL
raw_mapping_data	genetic_map.h	/^        vector<vector<char> > raw_mapping_data;$/;"	m	class:genetic_map
raw_prob_data_	genetic_map_BCpxFy.h	/^        vector<vector<allel_state> > raw_prob_data_;$/;"	m	class:genetic_map_BCpxFy
raw_prob_data_	genetic_map_RIL.h	/^        vector<vector<allel_state> > raw_prob_data_;$/;"	m	class:genetic_map_RIL
read_raw_mapping_data	genetic_map.cpp	/^int genetic_map::read_raw_mapping_data(string file_path) {$/;"	f	class:genetic_map
return_order	linkage_group.cpp	/^void linkage_group::return_order(vector<int>& out_order, $/;"	f	class:linkage_group
revert_suspicious_data	linkage_group_DH.cpp	/^void linkage_group_DH::revert_suspicious_data(){$/;"	f	class:linkage_group_DH
sanity_check	MSTOpt.cpp	/^void MSTOpt::sanity_check(){$/;"	f	class:MSTOpt
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
size	MSTOpt.h	/^            int size;$/;"	m	struct:MSTOpt::Block
squared_error	linkage_group_BCpxFy.cpp	/^double BCpxFy_dist_cal::squared_error(double delta) const {$/;"	f	class:BCpxFy_dist_cal
squared_error	linkage_group_RIL.cpp	/^double RIL_dist_cal::squared_error(double delta) const {$/;"	f	class:RIL_dist_cal
srcdir	Makefile	/^srcdir = .$/;"	m
subdir	Makefile	/^subdir = src$/;"	m
suspicious_data	genetic_map_DH.h	/^    	vector<pair<string, string> > suspicious_data;$/;"	m	class:genetic_map_DH
suspicious_data	linkage_group.h	/^        vector<pair<int,int> > suspicious_data;$/;"	m	class:linkage_group
suspicious_data_backup	linkage_group_DH.h	/^        vector<double> suspicious_data_backup;$/;"	m	class:linkage_group_DH
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
top_builddir	Makefile	/^top_builddir = ..$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..$/;"	m
total_number_of_missing_obs	genetic_map.h	/^        int total_number_of_missing_obs;$/;"	m	class:genetic_map
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
upper_bound	linkage_group_BCpxFy.cpp	/^void BCpxFy_dist_cal::upper_bound(){$/;"	f	class:BCpxFy_dist_cal
upper_bound	linkage_group_RIL.cpp	/^void RIL_dist_cal::upper_bound(){$/;"	f	class:RIL_dist_cal
upperbounds	genetic_map.h	/^        vector<double>  upperbounds;$/;"	m	class:genetic_map
usage	main.cpp	/^void usage(char * const argv[]){$/;"	f
verbose_	MSTOpt.h	/^        bool verbose_;$/;"	m	class:MSTOpt
write_output	genetic_map.cpp	/^void genetic_map::write_output(ostream& _output)$/;"	f	class:genetic_map
~genetic_map	genetic_map.cpp	/^genetic_map::~genetic_map() {$/;"	f	class:genetic_map
~genetic_map_DH	genetic_map_DH.cpp	/^genetic_map_DH::~genetic_map_DH(){$/;"	f	class:genetic_map_DH
~linkage_group_BCpxFy	linkage_group_BCpxFy.cpp	/^linkage_group_BCpxFy::~linkage_group_BCpxFy(){$/;"	f	class:linkage_group_BCpxFy
~linkage_group_DH	linkage_group_DH.cpp	/^linkage_group_DH::~linkage_group_DH()$/;"	f	class:linkage_group_DH
~linkage_group_RIL	linkage_group_RIL.cpp	/^linkage_group_RIL::~linkage_group_RIL(){$/;"	f	class:linkage_group_RIL
