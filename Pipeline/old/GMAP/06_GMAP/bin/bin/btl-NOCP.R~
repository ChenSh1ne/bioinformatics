library('getopt');
spec = matrix(c(
	'mark','m',1,'character',
	'trt','t',1,'character',
	'out','o',1,'character',
	'num','n',1,'character',
	'pop','p',1,'character',
	'help','h',0,'logical'
	), byrow=TRUE, ncol=4)
opt = getopt(spec)
print_usage <- function(spec=NULL){
	cat(getopt(spec, usage=TRUE));
	cat("Usage example: \n")
	cat("
Usage example: 
	Rscript Rqtl-NOCP.r --mark  --out --num --pop
	
Usage:
	--mark	map file
	--trt	trt file
	--pop	pop type
	--out	out dir
	--num	pm number
	--help		usage
\n")
	q(status=1);
}
times<-Sys.time()
library('qtl');
if ( !is.null(opt$help) ) { print_usage(spec) }
if ( is.null(opt$mark) ) { print_usage(spec) }
if ( is.null(opt$trt) ) { print_usage(spec) }
if ( is.null(opt$pop) ) { print_usage(spec) }
if ( is.null(opt$num) ) { opt$num=1000; }
if ( is.null(opt$out) ) { opt$out="./";}

d<-read.cross(file=opt$mark,phefile=opt$trt,format="csvsr",crosstype=opt$pop,na.strings="NaN")
if(!dir.exists(opt$out)){dir.create(opt$out)}
setwd(opt$out);
d<-jittermap(d)
d<-sim.geno(d)
d<-calc.genoprob(d)
phe.name<-colnames(d$pheno);
ncol=ceiling(sqrt(length(phe.name)));
nrow=ncol;
pdf("pheno.pdf",width=30*ncol,height=40*nrow)
par(mfrow=c(ncol,nrow))
for (i in 2:length(phe.name)){
	plotPheno(d,pheno.col=phe.name[i])
}
dev.off()
pdf("pheno.pdf",width=30*ncol,height=40*nrow)
par(mfrow=c(ncol,nrow))
for (i in 2:length(phe.name)){
	plotPheno(d,pheno.col=phe.name[i])
}
dev.off()
qtls<-matrix()
for(i in 2:length(phe.name)){
	scan<-scanone(d,model="binary",pheno.col=phe.name[i]);
	scan.pm<-scanone(d,model="binary",pheno.col=phe.name[i],n.perm=1000);
	write.table(file=paste(phe.name[i],".scan.csv",sep=""),sep="\t",x=scan);
	write.table(file=paste(phe.name[i],".pm.csv",sep=""),sep="\t",x=scan.pm);
	scan.result<-summary(scan, perms=scan.pm, pvalues=TRUE)
	if(min(scan.result$pval) >0.1){
		scan.result<-summary(scan,format="tabByCol",threshold=max(scan$lod)-0.01,drop=1)
		pm.result<-c(3,2.5)
		legend=pm.result
	}else{	
		pm.result<-summary(scan.pm)
		scan.result<-summary(scan,format="tabByCol",perms=scan.pm,alpha=0.1,drop=1)
		legend=paste(rownames(pm.result),round(pm.result,2))
	}
	pdf(file=paste(phe.name[i],".scan.pdf",sep=""))
	plot(scan)
	abline(h=pm.result,col=rainbow(length(pm.result)))
	legend("topright",legend=legend,col=rainbow(length(pm.result)),pch=1)
	dev.off()
	write.table(file=paste(phe.name[i],".region.csv",sep=""),sep="\t",x=scan.result);
	qtlname=paste(phe.name[i],c(1:length(scan.result$lod$chr)))
	qtl<-makeqtl(d,chr=scan.result$lod$chr,pos=scan.result$lod$pos,qtl.name=qtlname)
	fitqtl<-fitqtl(cross=d,qtl=qtl)
	write.table(file=paste(phe.name[i],".qtl.csv",sep=""),sep="\t",x=fitqtl$result.drop)
	pdf(paste(phe.name[i],".qtl.pdf",sep=""))
	plot(qtl)
	dev.off()
	if (length(qtl)==1){
		qtls=cbind(scan.result$lod$chr,scan.result$lod$pos,qtlname)
	}else{
		qtls<-rbind(qtls,c(scan.result$lod$chr,scan.result$lod$pos,qtlname))
	}
}
escaptime=Sys.time()-times;
print("Done!")
print(escaptime)